// Generated by view binder compiler. Do not edit!
package com.example.rocketspacegame.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.rocketspacegame.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFirstBlankBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout enterDetailCard;

  @NonNull
  public final EditText enterNameBox;

  @NonNull
  public final EditText enterNameBox2;

  @NonNull
  public final ConstraintLayout frameLayout;

  @NonNull
  public final TextView nameLabel;

  @NonNull
  public final TextView nameLabel2;

  @NonNull
  public final Button startButton;

  private FragmentFirstBlankBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout enterDetailCard, @NonNull EditText enterNameBox,
      @NonNull EditText enterNameBox2, @NonNull ConstraintLayout frameLayout,
      @NonNull TextView nameLabel, @NonNull TextView nameLabel2, @NonNull Button startButton) {
    this.rootView = rootView;
    this.enterDetailCard = enterDetailCard;
    this.enterNameBox = enterNameBox;
    this.enterNameBox2 = enterNameBox2;
    this.frameLayout = frameLayout;
    this.nameLabel = nameLabel;
    this.nameLabel2 = nameLabel2;
    this.startButton = startButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFirstBlankBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFirstBlankBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_first_blank, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFirstBlankBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.enterDetailCard;
      ConstraintLayout enterDetailCard = rootView.findViewById(id);
      if (enterDetailCard == null) {
        break missingId;
      }

      id = R.id.enterNameBox;
      EditText enterNameBox = rootView.findViewById(id);
      if (enterNameBox == null) {
        break missingId;
      }

      id = R.id.enterNameBox2;
      EditText enterNameBox2 = rootView.findViewById(id);
      if (enterNameBox2 == null) {
        break missingId;
      }

      ConstraintLayout frameLayout = (ConstraintLayout) rootView;

      id = R.id.nameLabel;
      TextView nameLabel = rootView.findViewById(id);
      if (nameLabel == null) {
        break missingId;
      }

      id = R.id.nameLabel2;
      TextView nameLabel2 = rootView.findViewById(id);
      if (nameLabel2 == null) {
        break missingId;
      }

      id = R.id.startButton;
      Button startButton = rootView.findViewById(id);
      if (startButton == null) {
        break missingId;
      }

      return new FragmentFirstBlankBinding((ConstraintLayout) rootView, enterDetailCard,
          enterNameBox, enterNameBox2, frameLayout, nameLabel, nameLabel2, startButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
